import numpy as np

def compute_tf_idf(docs, vocab):
    N, V = len(docs), len(vocab)
    tf = np.zeros((N,V))

    for i, doc in enumerate(docs):
        words = doc.lower().split()
        for word in words:
            if word in vocab:
                tf[i,vocab.index(word)] += 1
        tf[i] /= len(words)

    df = np.array([sum(1 for doc in docs if term in doc.lower().split())for term in vocab])
    idf= np.log(N/(df+1))

    return tf * idf 

docs = ["cat sat on the mat","dog sat on the log","cat and dog played together"]
vocab = list(set(" ".join(docs).lower().split()))
tf_idf = compute_tf_idf(docs,vocab)

print("Vocabulary",vocab)
print("TF - IDF Matrix :/n",tf_idf)
